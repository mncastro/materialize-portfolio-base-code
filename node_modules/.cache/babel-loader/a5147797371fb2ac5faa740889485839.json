{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\n\nclass EmitterInstance {\n  constructor(emitters, container, emitterOptions, position) {\n    var _a, _b, _c;\n\n    this.emitters = emitters;\n    this.container = container;\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n    this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n    this.name = emitterOptions.name;\n    let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n\n    if (particlesOptions === undefined) {\n      particlesOptions = {};\n    }\n\n    if (particlesOptions.move === undefined) {\n      particlesOptions.move = {};\n    }\n\n    if (particlesOptions.move.direction === undefined) {\n      particlesOptions.move.direction = this.emitterOptions.direction;\n    }\n\n    this.particlesOptions = particlesOptions;\n    this.size = (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n      const size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  play() {\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n      if (this.emitDelay === undefined) {\n        this.emitDelay = 1000 * this.emitterOptions.rate.delay / this.container.retina.reduceFactor;\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    delete this.emitDelay;\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a;\n\n    if (this.duration !== undefined) {\n      this.currentDuration += delta.value;\n\n      if (this.currentDuration >= this.duration) {\n        this.pause();\n\n        if (this.spawnDelay !== undefined) {\n          delete this.spawnDelay;\n        }\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this.currentDuration -= this.duration;\n        delete this.duration;\n      }\n    }\n\n    if (this.spawnDelay !== undefined) {\n      this.currentSpawnDelay += delta.value;\n\n      if (this.currentSpawnDelay >= this.spawnDelay) {\n        this.play();\n        this.currentSpawnDelay -= this.currentSpawnDelay;\n        delete this.spawnDelay;\n      }\n    }\n\n    if (this.emitDelay !== undefined) {\n      this.currentEmitDelay += delta.value;\n\n      if (this.currentEmitDelay >= this.emitDelay) {\n        this.emit();\n        this.currentEmitDelay -= this.emitDelay;\n      }\n    }\n  }\n\n  prepareToDie() {\n    var _a;\n\n    const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      this.duration = duration * 1000;\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.emitterOptions.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    const container = this.container;\n    const position = this.position;\n    const offset = {\n      x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n\n    for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n      const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n      container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n    }\n  }\n\n}\n\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"sources":["/Users/mcastro/Code/Tutorials/materialize-portfolio/node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js"],"names":["Object","defineProperty","exports","value","EmitterInstance","Utils_1","require","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","constructor","emitters","container","emitterOptions","_a","_b","_c","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","Utils","deepExtend","calcPosition","name","particlesOptions","particles","undefined","move","direction","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","life","count","immortal","play","retina","reduceFactor","emitDelay","rate","delay","prepareToDie","pause","resize","isPointInside","canvas","update","delta","duration","spawnDelay","destroy","emit","removeEmitter","percentPosition","i","quantity","addParticle"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c;\n        this.emitters = emitters;\n        this.container = container;\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n        this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n        if (particlesOptions === undefined) {\n            particlesOptions = {};\n        }\n        if (particlesOptions.move === undefined) {\n            particlesOptions.move = {};\n        }\n        if (particlesOptions.move.direction === undefined) {\n            particlesOptions.move.direction = this.emitterOptions.direction;\n        }\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    play() {\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.emitDelay === undefined) {\n                this.emitDelay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a;\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n            const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n        }\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n"]},"metadata":{},"sourceType":"script"}